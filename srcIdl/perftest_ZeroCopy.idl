/*
 * (c) 2005-2019  Copyright, Real-Time Innovations, Inc. All rights reserved.
 * Subject to Eclipse Public License v1.0; see LICENSE.md for details.
 */

/*
 * This file contains the types for Zero Copy used by RTI Perftest. The reason
 * why these types are separated from the main idl is because in RTI Connext
 * DDS 6.0.0 we will generate a less efficient code for the non-zero-copy types
 * if we add zero-copy types in the same idl. This behavior is fixed after 6.0.0
 * This information is covered in bug id: CORE-9693.
 */

#ifdef RTI_CUSTOM_TYPE_FLATDATA
#include "custom.idl"
#endif

const long MAX_BOUNDED_SEQ_SIZE_cp = 63000;
const long KEY_SIZE_cp = 4;

/*
 * ZERO COPY WITH FLATDATA
 */
@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestData_ZeroCopy_w_FlatData_t {
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, MAX_BOUNDED_SEQ_SIZE_cp> bin_data;
  #ifdef RTI_CUSTOM_TYPE_FLATDATA
    RTI_CUSTOM_TYPE_FLATDATA custom_type;
    // custom_type_size is the serialize size of the field custom_type
    // in the the sample that we send on the wire
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataKeyed_ZeroCopy_w_FlatData_t {
    @key
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, MAX_BOUNDED_SEQ_SIZE_cp> bin_data;
  #ifdef RTI_CUSTOM_TYPE_FLATDATA
    @key
    RTI_CUSTOM_TYPE_FLATDATA custom_type;
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataLarge_ZeroCopy_w_FlatData_t {
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, RTI_FLATDATA_MAX_SIZE> bin_data;
  #ifdef RTI_CUSTOM_TYPE_FLATDATA
    RTI_CUSTOM_TYPE_FLATDATA custom_type;
    long custom_type_size;
  #endif
};

@mutable
@language_binding(FLAT_DATA)
@transfer_mode(SHMEM_REF)
struct TestDataKeyedLarge_ZeroCopy_w_FlatData_t {
    @key
    octet key[KEY_SIZE_cp];

    long entity_id;
    unsigned long seq_num;
    long timestamp_sec;
    unsigned long timestamp_usec;
    long latency_ping;
    sequence<octet, RTI_FLATDATA_MAX_SIZE> bin_data;
  #ifdef RTI_CUSTOM_TYPE_FLATDATA
    @key
    RTI_CUSTOM_TYPE_FLATDATA custom_type;
    long custom_type_size;
  #endif
};